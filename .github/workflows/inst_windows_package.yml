name: Installer python on Windows for oq-engine
on:
  push:
  schedule:
    - cron: "0 5 * * 5"
jobs:
  Build_Installer:
    runs-on: windows-latest
    env:
      GIT_BRANCH: ${{ github.ref }}
      GIT_COMMIT_SHA: ${{ github.sha }}
    steps:
      - name: Set Variables
        run: |
          echo "Working Path: ${Env:GITHUB_WORKSPACE}"
          $branchName = $Env:GITHUB_REF -replace 'refs/heads/', ''
          echo "Branch: ${branchName}"
          echo "CURRENT_BRANCH=${branchName}" >> $Env:GITHUB_ENV
      - name: Output Variables
        run: |
          echo "${Env:CURRENT_BRANCH}"
      - name: Set up Python using embedded distribution and create Installer
        env:
          GIT_BRANCH: ${{ github.ref }}
          GIT_COMMIT_SHA: ${{ github.sha }}
        run: |
          cd C:\Users\runneradmin
          pwd
          Write-Host $Env:GITHUB_REF
          curl  https://www.python.org/ftp/python/3.8.10/python-3.8.10-embed-amd64.zip --output python.zip
          where.exe unzip.exe
          unzip.exe python.zip -d python
          echo "install pip and wheel and markdown"
          cd python
          curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
          .\python.exe .\get-pip.py
          mv .\python38._pth .\python._pth.old
          $Env:PY_PIP = "C:\Users\runneradmin\python\Scripts"
          $Env:PY_LIBS = "C:\Users\runneradmin\python\Lib;C:\Users\runneradmin\python\Lib\site-package"
          $Env:PY_HOME = "C:\Users\runneradmin\python"
          $ENV:PATH="C:\Users\runneradmin\python\Scripts;$ENV:PATH"
          .\python.exe -m pip install pip wheel --upgrade
          .\python.exe -m pip install markdown==3.2.2
          Set-Alias -Name python -Value C:\Users\runneradmin\python\python.exe
          Set-Alias -Name pip -Value C:\Users\runneradmin\python\Scripts\pip.exe
          cd ~
          echo "${Env:CURRENT_BRANCH}"
          git clone -q  -b installer --depth=1 https://github.com/gem/oq-builders
          cd .\oq-builders\installers\windows\nsis\
          mkdir .\oq-dist\engine
          ls
          git clone -q -b installer --depth=1 https://github.com/gem/oq-engine.git
          cd oq-engine
          Copy-Item -Path ".\install.py" -Destination "C:\Users\runneradmin\oq-builders\installers\windows\nsis\oq-dist\engine" -Recurse
          python -c "import sys; print(sys.version)"
          python -m pip install install -r requirements-py38-win64.txt
          cd ..
          echo "Downloading standalone apps"
          $app = ("oq-platform-standalone", "oq-platform-ipt", "oq-platform-taxonomy", "oq-platform-taxtweb")
          foreach ($element in $app) {
              git clone -q --depth=1 https://github.com/gem/$element.git
              python -m pip wheel --disable-pip-version-check --no-deps -w oq-dist/tools ./$element
              if ( $element -eq "oq-platform-taxtweb" ) 
              {
                $Env:PYBUILD_NAME = "oq-taxonomy"
                python -m pip -q wheel --disable-pip-version-check --no-deps -w oq-dist/tools ./$element
              }    
          }
          cd ~
          cd .\oq-builders\installers\windows\nsis
          echo "Generating NSIS installer with oq version and time of git"
          $version = Select-String -Path .\oq-engine\openquake\baselib\__init__.py -Pattern '__version__ ='
          $pattern = "(?<=\').+?(?=\')"
          $inst_version = [regex]::Matches($version, $pattern).Value
          $time_of_git = git -C .\oq-engine log -n1 --pretty='format:%cd' --date=format:'%y%m%d%H%M'
          Write-Host "version: ${inst_version} and time: ${time_of_git}"
          (Get-Content -Path .\installer.nsi.ist -Raw) -replace 'CHANGETIME', $time_of_git -replace 'CHANGEHERERELEASE', $inst_version | Set-Content -Path .\installer.nsi
          Write-Host "Create portable environment for engine"
          cd ~
          mkdir package
          cd package
          curl  https://www.python.org/ftp/python/3.8.10/python-3.8.10-embed-amd64.zip --output python.zip
          unzip.exe python.zip -d python
          echo "install pip and wheel"
          cd python
          curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
          .\python.exe .\get-pip.py
          mv .\python38._pth ..\python._pth.old
          $Env:PY_PIP = "C:\Users\runneradmin\package\python\Scripts"
          $Env:PY_LIBS = "C:\Users\runneradmin\package\python\Lib;C:\Users\runneradmin\python\Lib\site-package"
          $Env:PY_HOME = "C:\Users\runneradmin\package\python"
          $ENV:PATH="C:\Users\runneradmin\package\python\Scripts;$ENV:PATH"
          .\python.exe -m pip install wheel --upgrade
          .\python.exe -m pip install markdown==3.2.2
          Set-Alias -Name python -Value C:\Users\runneradmin\python\python.exe
          Set-Alias -Name pip -Value C:\Users\runneradmin\python\Scripts\pip.exe
          cd ..
          python -m markdown "C:\Users\runneradmin\oq-builders\installers\windows\nsis\oq-engine\README.md" > .\README.html
          Write-Host "Copy the wheel created for the standalone"
          ls "C:\Users\runneradmin\oq-builders\installers\windows\nsis\oq-dist\*"
          Copy-Item -Path "C:\Users\runneradmin\oq-builders\installers\windows\nsis\oq-dist" -Destination ".\" -Recurse
          cd oq-dist
          ls
          cd ..
          $files = @(Get-ChildItem .\oq-dist\engine\*.whl)
          $files.Name > .\oq-dist\engine\index.txt
          Get-Content -Path .\oq-dist\engine\install.py -Raw
          $files = @(Get-ChildItem .\oq-dist\tools\*.whl)
          $files.Name > .\oq-dist\tools\index.txt
          curl.exe -LO https://ci.openquake.org/job/builders/job/pdf-builder/lastSuccessfulBuild/artifact/oq-engine/doc/manual/oq-manual.pdf
          Rename-Item .\oq-manual.pdf "Openquake manual.pdf"
          Copy-Item -Path "C:\Users\runneradmin\oq-builders\installers\windows\nsis\installer.nsi" -Destination ".\" 
          Copy-Item -Path "C:\Users\runneradmin\oq-builders\installers\windows\nsis\openquake*.*" -Destination ".\" 
          Copy-Item -Path "C:\Users\runneradmin\oq-builders\installers\windows\nsis\oq-*.*" -Destination ".\" 
          Copy-Item -Path "C:\Users\runneradmin\oq-builders\installers\windows\nsis\LICENSE.txt" -Destination ".\" 
          makensis /V4 installer.nsi
          mkdir out
          Copy-Item *.exe .\out
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Installer
          path: C:\Users\runneradmin\package\out

  Test_Installer:
    needs: Build_Installer
    runs-on: windows-latest
    env:
      GIT_BRANCH: ${{ github.ref }}
      GIT_COMMIT_SHA: ${{ github.sha }}
    steps:
      - name: Set Variables
        run: |
          echo "Working Path: ${Env:GITHUB_WORKSPACE}"
          $branchName = $Env:GITHUB_REF -replace 'refs/heads/', ''
          echo "Branch: ${branchName}"
          echo "CURRENT_BRANCH=${branchName}" >> $Env:GITHUB_ENV
      - name: Download Windows Installer from build job
        uses: actions/download-artifact@v2
        with:
          name: Installer
      - name: Execute the Installer
        run: |
          $Install = Get-ChildItem -Filter *.exe 
          Start-Process -FilePath $Install.Fullname -ArgumentList "/S" -Wait
          cd "C:\Program Files\OpenQuake\"
          $ENV:PATH="C:\Program Files\OpenQuake\python\Scripts"
          pwd
          ls
          cd .\python\Scripts
          ls
          .\oq.exe --version
          #.\oq.exe engine --run "https://downloads.openquake.org/pkgs/test_event_based_risk_inputs_bc.zip"
