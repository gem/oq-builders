name: compile Linux build GDAL
on:
  workflow_dispatch:
  push:
    branches:
      - test_gdal
#  schedule:
#    - cron: "0 2 * * 3"
jobs:
  build_GDAL:
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        python-version: [36, 37, 38, 39]
        python-version: [37, 38, 39]
    container:
      image: quay.io/pypa/manylinux1_x86_64
      env:
        GEM_SET_PY: ${{ matrix.python-version }}
      volumes:
        - /home/runner/${{ matrix.python-version }}:/io
    steps:
      - uses: actions/checkout@v1
      - name: build gdal wheel
        run: |
          bash -x wheels/builders/gdal.sh
      - name: Upload wheel
        uses: actions/upload-artifact@v1
        with:
          name: gdal_wheel
          path: /home/runner/${{ matrix.python-version }}

  test_GDAL:
    needs: build_GDAL
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - name: Set up Python  ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: download artifact
      uses: actions/download-artifact@v2
      id: download
      with:
        name: gdal_wheel
        path: /home/runner/${{ matrix.python-version }}
    - name: 'Echo artifact download path'
      run: echo ${{steps.download.outputs.download-path}}
    - name: Test Gdal with python ${{ matrix.python-version }}
      shell: bash
      run: |
        echo "engine installation to test GDAL wheel"
        python3 -m venv $HOME/openquake
        source $HOME/openquake/bin/activate
        pip install -U pip wheel setuptools
        pip install install pytest
        cd $HOME
        git clone https://github.com/gem/oq-engine.git
        cd oq-engine && pip install -e .
        cd $HOME/oq-engine
        pip install numpy==1.20
        echo "cd ${{steps.download.outputs.download-path}}"
        cd ${{steps.download.outputs.download-path}}
        pwd
        ls -lrt 
        cd ${{steps.download.outputs.download-path}}/wheelhouse
        pwd
        ls -lrt
        wheel="$(ls *`echo ${{ matrix.python-version }} | tr -d .`*.whl)"
        echo ${wheel}
        pip install ${wheel}
        cd $HOME/oq-engine
        pytest openquake/sep/tests/test_utils.py
