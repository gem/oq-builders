name: M1 GDAL brew
on:
  push:
  workflow_dispatch:
#  push:
#    branches:
#      - test_gdal
#    inputs:
#      gdal-ref:
#        description: GDAL Version
#        default: 3.3.3
#        required: true
# pull_request:
#    branches:
#      - master
jobs:
  wheel_of_GDAL:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [m1Gem]
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Install gdal using brew and build wheel
        #env:
          #GDAL_REF: ${{ github.event.inputs.gdal-ref }}
        run: |
          export PIP_DEFAULT_TIMEOUT=100
          #$gdalref = ${{ github.event.inputs.gdal-ref }}
          echo "Input GDAL version: $gdalref"
          echo "brew install gdal"
          brew install gdal
          #
          #test gdal installation
          echo " gdalinfo --version"
          gdalinfo --version
          python3.9 -m venv oq-builders
          source ./oq-builders/bin/activate
          echo "source ./oq-builders/bin/activate"
          pip3 install -U pip wheel setuptools delocate numpy
          pip3 download GDAL==3.5.1
          tar -xvzf GDAL-3.5.1.tar.gz
          cd GDAL-3.5.1
          pwd
          python setup.py build
          python setup.py install
          pip wheel --no-deps --no-binary :all: -w output .
          cd output
          rm -rf ~/src/whl
          mkdir -p ~/src/whl/${{ matrix.python-version }}
        with:
          name: gdal_wheel
          path: ~/src/whl/${{ matrix.python-version }}
      - name: 'Echo artifact download path'
        run: echo ${{steps.download.outputs.download-path}}
      - name: Test Gdal with python
        shell: bash
        run: |
          export PIP_DEFAULT_TIMEOUT=100
          echo "engine installation to test GDAL wheel"
          cd ~
          python3.9 -c "import sys; print(sys.version)"
          python3.9 -m venv oq-test
          source ./oq-test/bin/activate
          git clone https://github.com/gem/oq-engine.git
          cd oq-engine
          pip3 install -U pip wheel setuptools pytest numpy
          pip3 install -e .
          cd ${{steps.download.outputs.download-path}}
          pwd
          ls -lrt
          wheel="$(ls *`echo ${{ matrix.python-version }} | tr -d .`*.whl)"
          echo ${wheel}
          pip3 install ${wheel}
          cd ~/oq-engine
          python3.9 -c "import openquake"
          pytest openquake/sep/tests/test_utils.py
