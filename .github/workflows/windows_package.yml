name: Windows Installer for oq-engine
on:
  push:
  schedule:
    - cron: "0 5 * * 5"
jobs:
  Windows-Installer:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.8]
    steps:
      - name: Set up Python using embedded distribution
        run: |
          curl  https://www.python.org/ftp/python/3.8.10/python-3.8.10-embed-amd64.zip --output python.zip
          where.exe unzip.exe
          unzip.exe python.zip 
          ls
          echo "install pip and wheel and setuptools"
          cd python
          curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
          .\python.exe .\get-pip.py
          mv .\python38._pth .\python38._pth.old
          $Env:PYBUILD_NAME = "oq-taxonomy"
          $Env:PY_PIP = "C:\Users\runneradmin\python\Scripts"
          $Env:PY_LIBS = "C:\Users\runneradmin\python\Lib;C:\Users\sysadmin\python\Lib\site-package"
          $Env:PY_HOME = "C:\Users\runneradmin\python"
          python -c "import sys; print(sys.version)"
          where.exe python.exe
      - name: Create VENV for installation of engine and tools and display python version
        run: |
          git clone -q  --depth=1 https://github.com/gem/oq-builders
          cd .\oq-builders\installers\windows\nsis\
          python -m venv C:\Users\runneradmin\oq-builders\installers\windows\nsis\python-dist
          C:\Users\runneradmin\oq-builders\installers\windows\nsis\python-dist\Scripts\activate.ps1
      - name: Extracting python wheels for engine and for core apps
        run: |
          cd ~
          cd .\oq-builders\installers\windows\nsis\
          C:\Users\runneradmin\oq-builders\installers\windows\nsis\python-dist\Scripts\activate.ps1
          echo "Extracting python wheels"
          $PY_VER="py${{ matrix.python-version }}"
          $py = $PY_VER.replace(".","")
          git clone --depth=1 https://github.com/gem/oq-engine.git
          cd oq-engine
          python -m pip install install -r requirements-$py-win64.txt
          python -m pip install .
          cd ~
          python -m pip wheel --disable-pip-version-check --no-deps -w oq-dist/engine ./oq-engine
          echo "Downloading standalone apps"
          cd ~
          $app = ("oq-platform-standalone", "oq-platform-ipt", "oq-platform-taxonomy", "oq-platform-taxtweb")
          foreach ($element in $app) {
              git clone -q --depth=1 https://github.com/gem/$element.git
              python -m pip wheel --disable-pip-version-check --no-deps -w oq-dist/tools ./$element
              if ( $element -eq "oq-platform-taxtweb" ) 
              {
                #export PYBUILD_NAME="oq-taxonomy"
                $Env:PYBUILD_NAME = "oq-taxonomy"
                python -m pip -q wheel --disable-pip-version-check --no-deps -w oq-dist/tools ./$element
              }    
          }
      - name: Prepare Windows Installer 
        run: |
          cd ~
          cd .\oq-builders\installers\windows\nsis\
          pwd
          curl.exe -LO https://ci.openquake.org/job/builders/job/pdf-builder/lastSuccessfulBuild/artifact/oq-engine/doc/manual/oq-manual.pdf
          Rename-Item .\oq-manual.pdf "Openquake manual.pdf"
      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: Output Wheel
          path: C:\Users\runneradmin\oq-dist
